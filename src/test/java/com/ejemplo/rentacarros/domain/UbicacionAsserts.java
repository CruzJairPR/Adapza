package com.ejemplo.rentacarros.domain;

import static com.ejemplo.rentacarros.domain.AssertUtils.zonedDataTimeSameInstant;
import static org.assertj.core.api.Assertions.assertThat;

public class UbicacionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUbicacionAllPropertiesEquals(Ubicacion expected, Ubicacion actual) {
        assertUbicacionAutoGeneratedPropertiesEquals(expected, actual);
        assertUbicacionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUbicacionAllUpdatablePropertiesEquals(Ubicacion expected, Ubicacion actual) {
        assertUbicacionUpdatableFieldsEquals(expected, actual);
        assertUbicacionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUbicacionAutoGeneratedPropertiesEquals(Ubicacion expected, Ubicacion actual) {
        assertThat(actual)
            .as("Verify Ubicacion auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUbicacionUpdatableFieldsEquals(Ubicacion expected, Ubicacion actual) {
        assertThat(actual)
            .as("Verify Ubicacion relevant properties")
            .satisfies(a -> assertThat(a.getLatitud()).as("check latitud").isEqualTo(expected.getLatitud()))
            .satisfies(a -> assertThat(a.getLongitud()).as("check longitud").isEqualTo(expected.getLongitud()))
            .satisfies(a ->
                assertThat(a.getTimestamp())
                    .as("check timestamp")
                    .usingComparator(zonedDataTimeSameInstant)
                    .isEqualTo(expected.getTimestamp())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUbicacionUpdatableRelationshipsEquals(Ubicacion expected, Ubicacion actual) {
        assertThat(actual)
            .as("Verify Ubicacion relationships")
            .satisfies(a -> assertThat(a.getCarro()).as("check carro").isEqualTo(expected.getCarro()));
    }
}
